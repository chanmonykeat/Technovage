"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    customers: [Customer] @all
    purchases: [Purchase] @all
    customer(id: ID @eq): Customer @find
    searchCustomerQuery(search: String!): [Customer]
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users: [User!]! @all
}
type Mutation {
    # createUser(
    #     name: String @rules(apply: ["required"])
    #     email: String @rules(apply: ["required", "email", "unique:users,email"])
    # ): User @create(model: "App\\User")
    # updateUser(
    #     id: ID @rules(apply: ["required"])
    #     name: String
    #     email: String @rules(apply: ["email"])
    # ): User @update(model: "App\\User")
    # deleteUser(
    #     id: ID @rules(apply: ["required"])
    # ): User @delete(model: "App\\User")

    createPurchase(input: CreatePurchaseInput! @spread): Purchase @create

    createCustomer(
        name: String! @rules(apply: ["required"])
        phone_number: String! @rules(apply: ["required", "unique:customers,phone_number"])
        address: String
        score: Int
        registration_date: DateTime
        created_at: DateTime
        updated_at: DateTime
    ) : Customer! @create(model: "Customer")

    updateCustomer(
        id: ID @rules(apply: ["required"])
        name: String! @rules(apply: ["required"])
        phone_number: String! @rules(apply: ["required"])
        address: String
        score: Int!
        updated_at: DateTime!
    ): Customer @update

    deleteCustomer(
        id: ID! @rules(apply: ["required"])
    ): Customer @delete
}
"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
input CreatePurchaseInput {
  amount: Int @rules(apply: ["required"])
  created_at: DateTime
  customer: CreateCustomerBelongsTo
}

input CreateCustomerBelongsTo {
  connect: ID
  create: CreateCustomerInput
}
input CreateCustomerInput {
  name: String!
}

type Customer {
    id: ID!
    name: String!
    phone_number: String!
    address: String
    score: Int
    "When the customer was created."
    registration_date: DateTime

    "When the account was created."
    created_at: DateTime

    "When the account was last updated."
    updated_at: DateTime
    purchases: [Purchase] @hasMany
}

type Purchase {
    id: ID!
    amount: Int!

    "When the account was created."
    created_at: DateTime!

    customer: Customer! @belongsTo
}
